{
    use esmith::ConfigDB;
    use esmith::NetworksDB;
    use NethServer::Firewall;
    my $fw = new NethServer::Firewall();
    my $db = esmith::ConfigDB->open_ro('contentfilter');
    my $ndb = esmith::NetworksDB->open_ro();

    # this directory is used to store user acls
    my $dir = '/etc/squid/squidGuard/';
    # create the directory if not exists
    if ( ! -d $dir) {
        mkdir($dir);
    }
    # cleanup old files
    unlink glob "$dir*";


    sub __out_userlist {
        my $profile = shift;
        my $users = shift;

        open(my $fh, '>', $dir.$profile) or die("Can't write file $dir$profile");
        foreach (split(/\s+/, $users)) {
            print $fh "$_\n";
        }
        close $fh;
    }

    foreach ($db->get_all_by_prop(type => 'profile')) {
        my $src = $_->prop('Src') || next;
        my $pname = "src_".$_->key;

        if ($src !~ /;/) {
           $src = "user $src";
        } else {
           my ($type, $key) = split(/;/,$src);
           if ($type eq 'user') {
               $src = "userlist $dir$pname";
               __out_userlist($pname, $key);
           } elsif ($type eq 'group') {
               my ($name,$passwd,$gid,$members) = getgrnam($key);
               next if (!$members);
               $src = "userlist $dir$pname";
               __out_userlist($pname, $members);
           } elsif ($type eq 'zone') {
               $src = "ip ".$fw->getZoneCIDR($key);
           } elsif ($type eq 'role') {
               $src = '';
               foreach ($ndb->get_by_role($key)) {
                   my $ip = $_->prop('ipaddr') || next;
                   my $mask = $_->prop('netmask') || next;
                   my $net = esmith::util::computeLocalNetworkShortSpec($ip,$mask);
                   $src .= "ip $net\n    ";
               }
           } else {
               $src = "ip ".$fw->getAddress($src);
           }
        }
    
        $OUT .= "src $pname {\n    $src\n}\n";
    }

}
